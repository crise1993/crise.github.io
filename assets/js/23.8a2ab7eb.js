(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{441:function(t,s,a){t.exports=a.p+"assets/img/reflow-repaint-composite.a3fb8efb.png"},534:function(t,s,a){"use strict";a.r(s);var n=a(65),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"重排、重绘与合成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#重排、重绘与合成"}},[t._v("#")]),t._v(" 重排、重绘与合成")]),t._v(" "),n("p",[t._v("DOM 树生成后还要经历布局、分层、绘制、合成等阶段后才能显示出漂亮的页面。而渲染流水线任意一帧的生成方式，有 "),n("code",[t._v("重排")]),t._v("、"),n("code",[t._v("重绘")]),t._v("和"),n("code",[t._v("合成")]),t._v("三种方式，按照效率推荐合成方式优先，在不能满足需求时使用重绘甚至重排的方式。")]),t._v(" "),n("p",[t._v("本文重点放在讲解浏览器重排、重绘与合成的概念、渲染区别、优化手段等，至于想了解浏览器渲染原理的同学，详情请移步"),n("RouterLink",{attrs:{to:"/blog/broswer/render-mechanism.html"}},[t._v("这篇文章")]),t._v("。")],1),t._v(" "),n("h2",{attrs:{id:"_1-重排-回流-relayout-reflow"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-重排-回流-relayout-reflow"}},[t._v("#")]),t._v(" 1. 重排/回流（relayout/reflow）")]),t._v(" "),n("blockquote",[n("p",[t._v("回流就好比向河里(文档流)扔了一块石头(dom变化)，激起涟漪，然后引起周边水流受到波及，所以叫做回流。重排（relayout）和回流（reflow）是一个意思，relayout是 "),n("code",[t._v("webkit")]),t._v(" 中的说法，而reflow则是 "),n("code",[t._v("Geoko")]),t._v(" 中的说法。下面便于统一，都称作重排。")])]),t._v(" "),n("p",[t._v("当 渲染树 中的一部分（或全部）因为元素的布局、几何属性以及显示/隐藏等状态改变而需要重新构建，这个过程就叫重排。")]),t._v(" "),n("p",[t._v("如果你改了一个影响元素布局信息的CSS样式，那么浏览器会将当前的Layout标记为"),n("code",[t._v("dirty")]),t._v("，这会使得浏览器在下一帧/下一次渲染执行重排。并不是JS执行完这一行改变样式的语句之后立即重排，所以你可以在JS语句里写100行改CSS的语句，但是只会在下一帧的时候重排一次。")]),t._v(" "),n("h3",{attrs:{id:"_1-1-触发条件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-触发条件"}},[t._v("#")]),t._v(" 1.1 触发条件")]),t._v(" "),n("p",[t._v("如果你在当前Layout被标记为dirty的情况下，访问了offsetTop、scrollHeight等属性，那么，浏览器会立即重新Layout，计算出此时元素正确的位置信息，以保证你在JS里获取到的offsetTop、scrollHeight等是正确的。")]),t._v(" "),n("ul",[n("li",[t._v("下述情况会触发强制重排（Force Layout）：")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("触发条件")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("浏览器窗口尺寸改变（resize事件发生时）")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("添加或者删除可见的DOM元素")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("访问 offsetWidth/offsetHeight/offsetLeft/offsetTop、scrollWidth/scrollHeight/scrollTop/scrollLeft、clientWidth/clientHeight/clientLeft/clientTop、getBoundingClientRect()、getComputedStyle() 等属性")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("scrollTo()、scrollIntoView()、scrollIntoViewIfNeeded()页面滚动")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("激活伪类，如:hover")])])])]),t._v(" "),n("p",[t._v("这一过程强制浏览器将本来在上述渲染流程中才执行的Layout过程前提至JS执行过程中。如果每次在 Layout 为 dirty 时触发强制重排的属性，会极大的延缓JS的执行效率。")]),t._v(" "),n("ul",[n("li",[t._v("改变元素的这些属性也会触发重排：")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("触发条件")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("盒模型相关的属性：width、height、min-height、max-width、margin、padding、border、display、overflow等")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("定位及浮动相关的属性：position、top、left、bottom、right、float等")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("节点内容改变，尤其是输入控件。比如文本变化或图片被另一个不同尺寸的图片所替代")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("节点内部文字结构变化：text-align、overflow、font-size、font-family、font-weight、line-height、vertival-align、white-space等")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("设置style属性")])])])]),t._v(" "),n("p",[t._v("每次重排或者强制重排后，当前Layout就不再dirty。所以你再访问offsetWidth之类的属性，并不会再触发重排。")]),t._v(" "),n("h3",{attrs:{id:"_1-2-影响范围"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-影响范围"}},[t._v("#")]),t._v(" 1.2 影响范围")]),t._v(" "),n("p",[t._v("由于浏览器渲染界面是基于流式布局模型的，所以触发重排时会对周围DOM重新排列，影响的范围有两种：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("场景")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("影响范围")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("例子")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("从根节点html开始对整个渲染树进行重新布局")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("全局")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("更变窗口尺寸/方向、修改根元素的尺寸/字体大小、滚动条出现等")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("对渲染树的某部分或某一个渲染对象进行重新布局")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("局部")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("把一个dom的宽高之类的 几何信息定死，然后在dom内部触发重排，就只会重新渲染该dom内部的元素，而不会影响到外界；"),n("br"),t._v("我们把某个dom元素用 "),n("code",[t._v("position:absolute/fixed")]),t._v(" 踢出文档流，然后改变dom元素的几何信息，这样就只在dom元素本身及内部触发重排")])])])]),t._v(" "),n("p",[t._v("在重排的时候，浏览器会使渲染树中受到影响的部分失效，并重新构造这部分渲染树。任何受影响的区域都需要重新布局、重绘，并且将最终绘制的元素重新合成在一起。")]),t._v(" "),n("h2",{attrs:{id:"_2-重绘-repaint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-重绘-repaint"}},[t._v("#")]),t._v(" 2. 重绘（repaint）")]),t._v(" "),n("blockquote",[n("p",[t._v("重排一定会引起重绘，但重绘不一定会引起重排。")])]),t._v(" "),n("p",[t._v("浏览器重绘，就是当"),n("code",[t._v("Render Tree")]),t._v("中的元素的外观、风格发生改变，而不影响布局。一旦你更改了某个元素的会触发重绘的样式，那么浏览器就会在下一帧的渲染步骤中进行重绘。也即一些介绍重绘机制中说的"),n("code",[t._v("作废（invalidating）")]),t._v("，JS更改样式导致某一片区域的样式作废，从而在下一帧中重绘 作废 的区域。")]),t._v(" "),n("p",[t._v("但是，有一个非常关键的行为，就是："),n("em",[n("strong",[t._v("重绘是以合成层为单位的。也即 作废 的既不是整个文档，也不是单个元素，而是这个元素所在的"),n("code",[t._v("合成层")])])]),t._v(" 。")]),t._v(" "),n("p",[t._v("例如更改了字体的颜色，浏览器将新样式赋予给元素并重新绘制（渲染节点转换为位图）的过程。由于没有导致 DOM 几何属性的变化，因此元素的位置信息不需要更新。")]),t._v(" "),n("h3",{attrs:{id:"_2-1-触发条件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-触发条件"}},[t._v("#")]),t._v(" 2.1 触发条件")]),t._v(" "),n("p",[t._v("常见的引起重绘的属性:")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("属性名")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}}),t._v(" "),n("th",{staticStyle:{"text-align":"center"}}),t._v(" "),n("th",{staticStyle:{"text-align":"center"}}),t._v(" "),n("th",{staticStyle:{"text-align":"center"}})])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("color")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("border-style")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("visibility")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("text-decoration")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("border-radius")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("background")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("background-image")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("background-position")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("background-repeat")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("background-size")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("outline")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("outline")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("outline-color")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("outline-style")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("outline-width")])])])]),t._v(" "),n("p",[n("code",[t._v("reflow")]),t._v("的开销大于"),n("code",[t._v("repaint")]),t._v("，所以改变dom布局时我们要注意减少影响的范围。基本原则就是，把动画元素用 "),n("code",[t._v("position:absolute")]),t._v(" 踢出文档流，这样 "),n("code",[t._v("R&R")]),t._v(" 就限制在了absolute元素的子节点。告诉浏览器，我这块结构跟其他的单独渲染，不要搅和全页面了。")]),t._v(" "),n("h3",{attrs:{id:"_2-2-渲染顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-渲染顺序"}},[t._v("#")]),t._v(" 2.2 渲染顺序")]),t._v(" "),n("p",[t._v("绘制的顺序其实就是元素进入堆栈样式上下文的顺序。这些堆栈会从后往前绘制，因此这样的顺序会影响绘制。块渲染对象的堆栈顺序如下：")]),t._v(" "),n("ul",[n("li",[t._v("1、背景颜色")]),t._v(" "),n("li",[t._v("2、背景图片")]),t._v(" "),n("li",[t._v("3、边框")]),t._v(" "),n("li",[t._v("4、子代")]),t._v(" "),n("li",[t._v("5、轮廓")])]),t._v(" "),n("h2",{attrs:{id:"_3-合成-composite"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-合成-composite"}},[t._v("#")]),t._v(" 3. 合成（composite）")]),t._v(" "),n("p",[t._v("合成是一种将页面拆分成多层的技术，合成线程可以将各个图层在不同线程中光栅化，再组合成一个页面。当滚动时，如果层已经被光栅化，则会使用已经存在的层合成新的帧，动画则可以通过移动层来实现。")]),t._v(" "),n("h3",{attrs:{id:"_3-1-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-优点"}},[t._v("#")]),t._v(" 3.1 优点")]),t._v(" "),n("p",[t._v("合成的好处在于其独立于主线程。合成线程不需要等待样式计算和Javascript代码的运行。这也是为什么合成更适合优化交互性能，但如果布局或者绘制需要重新计算则主线程是必须要参与的。")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("优势")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("合成层的位图，会交由 GPU 合成，⽐ CPU 处理要快")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("当需要 repaint 时，只需要 repaint 本身，不会影响到其他的层")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("对于 transform 和 opacity 效果，不会触发 layout 和 paint，而是在已经渲染好的元素基础上进行附加工作")])])])]),t._v(" "),n("p",[t._v("举个🌰：")]),t._v(" "),n("p",[t._v("一个黑底色的div，往右飞100px，传统JS过程是对每次修改left值后重新画一个div。而如果我们用 "),n("code",[t._v("transform:translate(0,100px);transition:2s;")]),t._v(" 浏览器则是把这个绘制好的div单独放在一个画面层再平移这个层过去，div的几何形状，颜色不会再重复计算，而是保留在这个图层中。")]),t._v(" "),n("h3",{attrs:{id:"_3-2-提升方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-提升方案"}},[t._v("#")]),t._v(" 3.2 提升方案")]),t._v(" "),n("p",[t._v("提升合成层的最好⽅式是使⽤ CSS 的 "),n("code",[t._v("will-change")]),t._v(" 属性：")]),t._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#target")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("will-change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transform"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"_4-渲染区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-渲染区别"}},[t._v("#")]),t._v(" 4. 渲染区别")]),t._v(" "),n("p",[n("img",{attrs:{src:a(441),alt:"reflow/repaint/composite"}})]),t._v(" "),n("figcaption",[t._v("这三种方式的渲染路径是不同的，通常渲染路径越长，生成图像花费的时间就越多")]),t._v(" "),n("ul",[n("li",[t._v("重排操作需要重新经过样式计算，布局、分层渲染树，再到绘制和合成以及之后的显示器显示这整一个渲染过程走一遍，开销非常大；")]),t._v(" "),n("li",[t._v("重绘操作会跳过布局、分层渲染树，直接到绘制和合成阶段；")]),t._v(" "),n("li",[t._v("合成操作会跳过布局、分层渲染树、绘制的阶段，直接重新光栅化、将多个贴图合并成一张位图，最终drawing到屏幕上。")])]),t._v(" "),n("h3",{attrs:{id:"_4-1-重排-重绘和-eventloop-有关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-重排-重绘和-eventloop-有关"}},[t._v("#")]),t._v(" 4.1 重排/重绘和 Eventloop 有关")]),t._v(" "),n("ul",[n("li",[n("ol",[n("li",[t._v("当 "),n("code",[t._v("Eventloop")]),t._v(" 执行完 "),n("code",[t._v("Microtasks")]),t._v(" 后，会判断document是否需要更新，因为大部分的屏幕是"),n("code",[t._v("60Hz")]),t._v("的刷新率，每"),n("code",[t._v("16.6ms")]),t._v("才会更新一次；")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"2"}},[n("li",[t._v("然后判断是否有 "),n("code",[t._v("resize")]),t._v(" 或者 "),n("code",[t._v("scroll")]),t._v(" 事件，有的话会去触发事件，所以 "),n("code",[t._v("resize")]),t._v(" 和 "),n("code",[t._v("scroll")]),t._v(" 事件也是至少 16ms 才会触发一次，并且自带节流功能；")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"3"}},[n("li",[t._v("判断是否触发了 "),n("code",[t._v("media query")]),t._v("；")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"4"}},[n("li",[t._v("更新动画并且发送事件；")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"5"}},[n("li",[t._v("判断是否有全屏操作事件；")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"6"}},[n("li",[t._v("执行 "),n("code",[t._v("requestAnimationFrame")]),t._v(" 回调；")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"7"}},[n("li",[t._v("执行 "),n("code",[t._v("IntersectionObserver")]),t._v(" 回调，该方法用于判断元素是否可见，可以用于懒加载上，但是兼容性不好；")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"8"}},[n("li",[t._v("更新界面")])])])]),t._v(" "),n("p",[t._v("以上就是一帧中可能会做的事情。如果在一帧中有空闲时间，就会去执行 "),n("code",[t._v("requestIdleCallback")]),t._v(" 回调。")]),t._v(" "),n("h2",{attrs:{id:"_5-优化手段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-优化手段"}},[t._v("#")]),t._v(" 5. 优化手段")]),t._v(" "),n("p",[t._v("当我们修改了元素的几何属性，导致浏览器触发重排或重绘时。它会把该操作放进渲染队列，等到队列中的操作到了一定的数量或者到了一定的时间间隔时，浏览器就会批量执行这些操作。")]),t._v(" "),n("h3",{attrs:{id:"_5-1-读-写操作尽量集中在一起"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-读-写操作尽量集中在一起"}},[t._v("#")]),t._v(" 5.1 读/写操作尽量集中在一起")]),t._v(" "),n("p",[t._v("由于浏览器自身缓存的"),n("code",[t._v("flush 队列")]),t._v("，样式集中在一起改变会被优化成只触发一次reflow/repaint操作，如果这中间夹带了读取属性的操作，会使缓存的"),n("code",[t._v("flush 队列")]),t._v("出列，立马触发渲染。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bad")]),t._v("\ndiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetLeft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetTop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// good")]),t._v("\ndiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetLeft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetTop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"_5-2-操作class或csstext-取代集中改变样式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-操作class或csstext-取代集中改变样式"}},[t._v("#")]),t._v(" 5.2 操作class或cssText，取代集中改变样式")]),t._v(" "),n("p",[t._v("虽然现在大部分浏览器有"),n("code",[t._v("flush 队列")]),t._v("渲染优化，但是不排除有些浏览器以及老版本的浏览器效率仍然低下，所以我们尽量使用className或cssText来集中改变样式。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bad")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" left "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" top "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" left "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" top  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// good ")]),t._v("\nel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"box"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// good")]),t._v("\nel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"; left: "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" left "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px; top: "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" top "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px;"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"_5-3-多次访问dom属性-先暂存引用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-多次访问dom属性-先暂存引用"}},[t._v("#")]),t._v(" 5.3 多次访问DOM属性，先暂存引用")]),t._v(" "),n("p",[t._v("不要经常访问会引起浏览器"),n("code",[t._v("flush队列")]),t._v("强制出列的属性，这样会导致浏览器强制重排。如果确实需要多次访问同一个 DOM，则先暂存它的引用。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bad")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发n次重排")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" divs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        divs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" box"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// good")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" box"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一次")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" divs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        divs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只触发一次重排")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 共2次重排")]),t._v("\n")])])]),n("h3",{attrs:{id:"_5-4-对要操作的元素-离线处理-处理完毕一起更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-对要操作的元素-离线处理-处理完毕一起更新"}},[t._v("#")]),t._v(" 5.4 对要操作的元素”离线处理”，处理完毕一起更新")]),t._v(" "),n("p",[t._v("当我们需要对DOM进行一系列修改的时候，可以通过以下步骤减少重排重绘次数：")]),t._v(" "),n("ul",[n("li",[n("ol",[n("li",[t._v("使元素脱离文档流；")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"2"}},[n("li",[t._v("对其进行多次修改；")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"3"}},[n("li",[t._v("将元素带回到文档中。")])])])]),t._v(" "),n("p",[t._v("考虑我们要执行一段批量插入节点的代码：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendDataToElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("appendToElement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        li "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        appendToElement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ul "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    li "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    appendToElement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("如果我们直接这样执行的话，由于每次循环都会插入一个新的节点，会导致浏览器重排一次。我们可以使用这三种方式进行优化，使DOM脱离文档流：")]),t._v(" "),n("ul",[n("li",[t._v("使用"),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/DocumentFragment",target:"_blank",rel:"noopener noreferrer"}},[t._v("DocumentFragment"),n("OutboundLink")],1),t._v("进行缓存操作，只会引发一次重排和重绘；")]),t._v(" "),n("li",[t._v("隐藏要修改的元素"),n("code",[t._v("display: none")]),t._v("，应用修改，重新显示"),n("code",[t._v("display: block")]),t._v("，会触发两次重排和重绘；")]),t._v(" "),n("li",[t._v("使用cloneNode(true or false) 和 replaceChild 技术，只会引发一次重排和重绘；")])]),t._v(" "),n("h4",{attrs:{id:"使用documentfragment进行缓存操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用documentfragment进行缓存操作"}},[t._v("#")]),t._v(" 使用DocumentFragment进行缓存操作")]),t._v(" "),n("p",[t._v("我们可以通过"),n("code",[t._v("createDocumentFragment")]),t._v("创建⼀个游离于DOM树之外的节点，然后在此节点上批量操作，最后插⼊DOM树中，因此只触发⼀次重排和重绘。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fragment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDocumentFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    fragment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fragment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"隐藏元素-应用修改-重新显示"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#隐藏元素-应用修改-重新显示"}},[t._v("#")]),t._v(" 隐藏元素，应用修改，重新显示")]),t._v(" "),n("p",[t._v("在要操作dom之前，通过display隐藏dom，当操作完成之后，才将元素的display属性为可见。因为不可见的元素不会触发重排和重绘，所以这个只会在展示和隐藏节点的时候，产生两次重排和重绘。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ul "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'none'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    li "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'block'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"使用-clonenode-和-replacechild-技术"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-clonenode-和-replacechild-技术"}},[t._v("#")]),t._v(" 使用 cloneNode 和 replaceChild 技术")]),t._v(" "),n("p",[t._v("将原始元素拷贝到一个脱离文档的节点中，修改节点后，再替换原始的元素。只会引发一次重排和重绘；")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ul "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" clone "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    li "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    clone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ul"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"_5-5-避免使用table布局"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-避免使用table布局"}},[t._v("#")]),t._v(" 5.5 避免使用table布局")]),t._v(" "),n("p",[t._v("HTML 采用基于流的布局模型，从根渲染对象（即"),n("code",[t._v("<html>")]),t._v("）开始，递归遍历部分或所有的框架层次结构，为每一个需要计算的渲染对象计算几何信息，大多数情况下只要一次遍历就能计算出几何信息。但是也有例外，比如"),n("code",[t._v("<table>")]),t._v("的计算就需要不止一次的遍历。")]),t._v(" "),n("p",[t._v("不要用table布局的另一个原因就是table中某个元素一旦触发reflow就会导致table里所有的其它元素reflow。在适合用table的场合，可以设置"),n("code",[t._v("table-layout")]),t._v("为 auto 或 fixed，这样可以让table一行一行的渲染，这种做法也是为了限制reflow的影响范围。")]),t._v(" "),n("h3",{attrs:{id:"_5-6-批量处理-dom-操作-例如-createdocumentfragment-或使用框架的虚拟dom"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-批量处理-dom-操作-例如-createdocumentfragment-或使用框架的虚拟dom"}},[t._v("#")]),t._v(" 5.6 批量处理 dom 操作，例如 createDocumentFragment，或使用框架的虚拟DOM")]),t._v(" "),n("p",[t._v("通过 JavaScript 操纵 DOM 会影响整个渲染流水线，触发样式计算、布局、绘制、栅格化、合成等任务，牵一发而动全身，对 DOM 的不当操作还可能引发强制同步布局和布局抖动问题，尤其对复杂页面会造成性能问题。而通过 JavaScript 实现的更轻量的虚拟 DOM 可以解决上述问题。\n")]),t._v(" "),n("h3",{attrs:{id:"_5-7-采用更高效的-api-或者更高效的写法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-采用更高效的-api-或者更高效的写法"}},[t._v("#")]),t._v(" 5.7 采用更高效的 API 或者更高效的写法")]),t._v(" "),n("ul",[n("li",[t._v("用 querySelectorAll() 替代 getElementByXXX()；")]),t._v(" "),n("li",[t._v("用事件委托来减少事件处理器的数量；")]),t._v(" "),n("li",[t._v("对于 resize、scroll 等进行防抖/节流处理；")]),t._v(" "),n("li",[t._v("使用 react、vue 等页面框架来编写 view 页面，采用虚拟 DOM 技术，极可能的将多次重排浓缩成一次。")])]),t._v(" "),n("h3",{attrs:{id:"_5-8-优化动画"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-优化动画"}},[t._v("#")]),t._v(" 5.8 优化动画")]),t._v(" "),n("h4",{attrs:{id:"对于动画效果-使用绝对定位让其脱离文档流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对于动画效果-使用绝对定位让其脱离文档流"}},[t._v("#")]),t._v(" 对于动画效果，使用绝对定位让其脱离文档流")]),t._v(" "),n("p",[t._v("对于动画效果，第一反应都得想到使用absolute/fixed定位让其脱离文档流，否则会引起父元素及后续元素大量的重排。")]),t._v(" "),n("p",[t._v("如果是平移动画，以1个像素为单位移动这样最平滑，但是自身的重排就会过于频繁，大量消耗CPU资源，如果以3个像素为单位移动则会好很多。至于是否需要牺牲一些平滑，来换取速度，这中间的度可以自己衡量。")]),t._v(" "),n("h4",{attrs:{id:"css3硬件加速"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css3硬件加速"}},[t._v("#")]),t._v(" css3硬件加速")]),t._v(" "),n("blockquote",[n("p",[t._v("GPU（Graphics Processing Unit） 是图像处理器。GPU 硬件加速是指应用 GPU 的图形性能对浏览器中的一些图形操作交给 GPU 来完成，因为 GPU 是专门为处理图形而设计，所以它在速度和能耗上更有效率。 GPU 加速可以不仅应用于3D，而且也可以应用于2D。这里， GPU 加速通常包括以下几个部分：Canvas2D，布局合成（Layout Compositing）, CSS3转换（transitions），CSS3 3D变换（transforms），WebGL和视频(video)。")])]),t._v(" "),n("p",[t._v("使用css3硬件加速，可以让"),n("code",[t._v("transform")]),t._v("、"),n("code",[t._v("opacity")]),t._v("、"),n("code",[t._v("filters")]),t._v("这些动画不会引起重排和重绘。但是对于动画的其它属性，比如"),n("code",[t._v("background-color")]),t._v("这些，还是会引起重排和重绘的，不过它还是可以提升这些动画的性能。")]),t._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n * 根据上面的结论\n * 将 2d transform 换成 3d\n * 就可以强制开启 GPU 加速\n * 提高动画性能\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* transform: translate(10px, 10px); */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate3d")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 10px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("但是如果你为太多元素使用css3硬件加速，会导致内存占用较大，会有性能问题，我们应该避免引起隐式合成层的提升。另外在动画结束的时候得关闭硬件加速，不然会产生字体模糊（由于GPU和CPU的算法的不同，在GPU渲染字体会导致抗锯齿无效）。")]),t._v(" "),n("h4",{attrs:{id:"避免隐式合成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#避免隐式合成"}},[t._v("#")]),t._v(" 避免隐式合成")]),t._v(" "),n("p",[t._v("保持动画的对象的z-index尽可能的高，这样可以尽量避免兄弟元素被隐式的提升成合成层。理想的，这些元素应该是body元素的直接子元素。当然，这不是总可能的。所以你可以克隆一个元素，把它放在body元素下仅仅是为了做动画。")]),t._v(" "),n("p",[t._v("将元素上设置will-change CSS属性，元素上有了这个属性，浏览器会提升这个元素成为一个复合层（不是总是）。这样动画就可以平滑的开始和结束。但是不要滥用这个属性，否则会大大增加内存消耗。")]),t._v(" "),n("h4",{attrs:{id:"减小合成层的尺寸"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#减小合成层的尺寸"}},[t._v("#")]),t._v(" 减小合成层的尺寸")]),t._v(" "),n("p",[t._v("一个渲染层，需要多少内存占用？为了便于理解，举一个简单的例子；一个宽、高都是100px的纯色图像需要多少内存？")]),t._v(" "),n("p",[t._v("100"),n("em",[t._v("100")]),t._v("4 = 40000字节，即39kb。这里乘以4是因为，每个像素需要四个字节计算机内存来描述。")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("div1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("div2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token style"}},[n("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#div1, #div2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("will-change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transform"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#div1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#div2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scale")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("这两个div视觉上是一样的，但是它们占用内存的大小div1是39kb，div2是400b。不同之处在于，div2纯色层是通过scale放大10倍做到的。")]),t._v(" "),n("p",[t._v("所以，对于图片和纯色层元素，我们可以将图片或元素的尺寸减少5%——10%，然后使用scale将它们放大；用户不会看到什么区别，但是你可以减少大量的存储空间。")]),t._v(" "),n("h4",{attrs:{id:"用css动画而不是js动画"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#用css动画而不是js动画"}},[t._v("#")]),t._v(" 用css动画而不是js动画")]),t._v(" "),n("p",[t._v("css动画有一个重要的特性，它是完全工作在GPU上。因为你声明了一个动画如何开始和如何结束，浏览器会在动画开始前准备好所有需要的指令；并把它们发送给GPU。而如果使用js动画，浏览器必须计算每一帧的状态；为了保证平滑的动画，我们必须在浏览器主线程计算新状态；把它们发送给GPU至少60次每秒。除了计算和发送数据比css动画要慢，主线程的负载也会影响动画； 当主线程的计算任务过多时，会造成动画的延迟、卡顿。")]),t._v(" "),n("p",[t._v("所以尽可能地使用基于css的动画，不仅仅更快；也不会被大量的js计算所阻塞。")]),t._v(" "),n("h2",{attrs:{id:"_6-延伸阅读"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-延伸阅读"}},[t._v("#")]),t._v(" 6. 延伸阅读")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://www.nowamagic.net/academy/detail/48110609",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dirty bit系统"),n("OutboundLink")],1),t._v("：为了不因为每个小变化都全部重新布局，浏览器使用一个dirty bit系统，一个渲染对象发生了变化或是被添加了，就标记它及它的children为dirty——需要layout。存在两个标识——dirty及children are dirty，children are dirty说明即使这个渲染对象可能没问题，但它至少有一个child需要layout。")]),t._v(" "),n("h2",{attrs:{id:"_7-参考文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-参考文档"}},[t._v("#")]),t._v(" 7. 参考文档")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/23428399",target:"_blank",rel:"noopener noreferrer"}},[t._v("重绘，回流和合成，了解基本浏览器绘制帮你优化页面性能"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"http://jartto.wang/2017/08/28/how-to-optimize-marker-of-AMap/",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何优化高德地图（AMap）Marker 动画"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/29879682",target:"_blank",rel:"noopener noreferrer"}},[t._v("全新Chrome Devtool Performance使用指南"),n("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);