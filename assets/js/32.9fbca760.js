(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{512:function(t,e,a){"use strict";a.r(e);var r=a(65),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[t._v("#")]),t._v(" http缓存")]),t._v(" "),a("p",[t._v("Cache-Control指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置Cache-Control并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括no-cache、no-store、max-age、max-stale、min-fresh、only-if-cached，响应消息中的指令包括public、private、no-cache、no-store、no-transform、must-revalidate、proxy-revalidate、max-age。各个消息中的指令含义如下")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("no-cache：指示请求或响应消息不能缓存")])]),t._v(" "),a("li",[a("p",[t._v("no-store：用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。")])]),t._v(" "),a("li",[a("p",[t._v("must-revalidate：告诉浏览器、缓存服务器，本地副本过期前，可以使用本地副本；本地副本一旦过期，必须去源服务器进行有效性校验。")])]),t._v(" "),a("li",[a("p",[t._v("Public指示响应可被任何缓存区缓存")])]),t._v(" "),a("li",[a("p",[t._v("Private指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效")])]),t._v(" "),a("li",[a("p",[t._v("max-age指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应")])]),t._v(" "),a("li",[a("p",[t._v("min-fresh指示客户机可以接收响应时间小于当前时间加上指定时间的响应")])]),t._v(" "),a("li",[a("p",[t._v("max-stale指示客户机可以接收超出超时期间的响应消息。如果指定max-stale消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。")])])]),t._v(" "),a("h2",{attrs:{id:"参考文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/ljianshu/Blog/issues/23",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解浏览器的缓存机制"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("https://github.com/chenjigeng/blog")])])}),[],!1,null,null,null);e.default=s.exports}}]);