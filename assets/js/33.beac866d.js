(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{513:function(t,a,e){"use strict";e.r(a);var r=e(65),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"一文读懂http"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一文读懂http"}},[t._v("#")]),t._v(" 一文读懂http")]),t._v(" "),e("h2",{attrs:{id:"http-1-x、http-2、http-3差别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-1-x、http-2、http-3差别"}},[t._v("#")]),t._v(" http/1.x、http/2、http/3差别")]),t._v(" "),e("h2",{attrs:{id:"_1-请求行包含请求方法、url、协议版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-请求行包含请求方法、url、协议版本"}},[t._v("#")]),t._v(" 1. 请求行包含请求方法、URL、协议版本")]),t._v(" "),e("p",[t._v("请求方法包含 8 种：GET、POST、PUT、DELETE、PATCH、HEAD、OPTIONS、TRACE。\nURL 即请求地址，由 <协议>：//<主机>：<端口>/<路径>?<参数> 组成\n协议版本即 http 版本号")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POST")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("chapter17"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("\n")])])]),e("p",[t._v("以上代码中“POST”代表请求方法，“/chapter17/user.html”表示 URL，“HTTP/1.1”代表协议和协议的版本。现在比较流行的是 Http1.1 版本")]),t._v(" "),e("h2",{attrs:{id:"_2-请求头包含请求的附加信息-由关键字-值对组成-每行一对-关键字和值用英文冒号-分隔"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-请求头包含请求的附加信息-由关键字-值对组成-每行一对-关键字和值用英文冒号-分隔"}},[t._v("#")]),t._v(" 2. 请求头包含请求的附加信息，由关键字/值对组成，每行一对，关键字和值用英文冒号“:”分隔")]),t._v(" "),e("p",[t._v("请求头部通知服务器有关于客户端请求的信息。它包含许多有关的客户端环境和请求正文的有用信息。其中比如：Host，表示主机名，虚拟主机；Connection,HTTP/1.1 增加的，使用 keepalive，即持久连接，一个连接可以发多个请求；User-Agent，请求发出者，兼容性以及定制化需求。")]),t._v(" "),e("h2",{attrs:{id:"_3-请求体-可以承载多个请求参数的数据-包含回车符、换行符和请求数据-并不是所有请求都具有请求数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-请求体-可以承载多个请求参数的数据-包含回车符、换行符和请求数据-并不是所有请求都具有请求数据"}},[t._v("#")]),t._v(" 3. 请求体，可以承载多个请求参数的数据，包含回车符、换行符和请求数据，并不是所有请求都具有请求数据")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tom"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("password"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("realName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tomson\n")])])]),e("p",[t._v("上面代码，承载着 name、password、realName 三个请求参数。")]),t._v(" "),e("h2",{attrs:{id:"响应报文由响应行-request-line-、响应头部-header-、响应主体三个部分组成。如下图所示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应报文由响应行-request-line-、响应头部-header-、响应主体三个部分组成。如下图所示"}},[t._v("#")]),t._v(" 响应报文由响应行（request line）、响应头部（header）、响应主体三个部分组成。如下图所示：")]),t._v(" "),e("p",[t._v("(1) 响应行包含：协议版本，状态码，状态码描述")]),t._v(" "),e("p",[t._v("状态码规则如下：\n1xx：指示信息--表示请求已接收，继续处理。\n2xx：成功--表示请求已被成功接收、理解、接受。\n3xx：重定向--要完成请求必须进行更进一步的操作。\n4xx：客户端错误--请求有语法错误或请求无法实现。\n5xx：服务器端错误--服务器未能实现合法的请求。")]),t._v(" "),e("p",[t._v("(2) 响应头部包含响应报文的附加信息，由 名/值 对组成")]),t._v(" "),e("p",[t._v("(3) 响应主体包含回车符、换行符和响应返回数据，并不是所有响应报文都有响应数据")]),t._v(" "),e("p",[t._v("Cache-Control指定请求和响应遵循的缓存机制。在请求消息或响应消息中设置Cache-Control并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令包括no-cache、no-store、max-age、max-stale、min-fresh、only-if-cached，响应消息中的指令包括public、private、no-cache、no-store、no-transform、must-revalidate、proxy-revalidate、max-age。各个消息中的指令含义如下")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("no-cache：指示请求或响应消息不能缓存")])]),t._v(" "),e("li",[e("p",[t._v("no-store：用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。")])]),t._v(" "),e("li",[e("p",[t._v("must-revalidate：告诉浏览器、缓存服务器，本地副本过期前，可以使用本地副本；本地副本一旦过期，必须去源服务器进行有效性校验。")])]),t._v(" "),e("li",[e("p",[t._v("Public指示响应可被任何缓存区缓存")])]),t._v(" "),e("li",[e("p",[t._v("Private指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效")])]),t._v(" "),e("li",[e("p",[t._v("max-age指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应")])]),t._v(" "),e("li",[e("p",[t._v("min-fresh指示客户机可以接收响应时间小于当前时间加上指定时间的响应")])]),t._v(" "),e("li",[e("p",[t._v("max-stale指示客户机可以接收超出超时期间的响应消息。如果指定max-stale消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。")])])]),t._v(" "),e("h2",{attrs:{id:"参考文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/ljianshu/Blog/issues/24",target:"_blank",rel:"noopener noreferrer"}},[t._v("从URL输入到页面展现到底发生什么？"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"http://t.zoukankan.com/fanyegong-p-12212682.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTPS、HTTP/2前端入门篇"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/6844903687593148429#heading-5",target:"_blank",rel:"noopener noreferrer"}},[t._v("一篇文章搞定前端面试"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=s.exports}}]);