(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{541:function(e,t,a){"use strict";a.r(t);var r=a(65),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"babel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel"}},[e._v("#")]),e._v(" babel")]),e._v(" "),a("h2",{attrs:{id:"babel介绍及作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel介绍及作用"}},[e._v("#")]),e._v(" babel介绍及作用")]),e._v(" "),a("p",[e._v("Babel官方的介绍'Babel is a JavaScript compiler' —— 其实就是一个 "),a("code",[e._v("JavaScript 编译器")]),e._v("。旨在将现代JavaScript代码（如ES6、ES7等）转换为向后兼容的版本（通常是ES5）。它允许我们在开发中使用最新的语法和特性，同时确保我们的代码在旧版本浏览器和环境中也能正常运行。")]),e._v(" "),a("p",[e._v("主要作用：")]),e._v(" "),a("ul",[a("li",[e._v("语法转换：将新的JavaScript语法转换为旧版本的语法，比如let、const、箭头函数、解构赋值等。")]),e._v(" "),a("li",[e._v("Polyfill填充：通过引入Polyfill，提供对新API（如Promise、Map、Set等）的支持。")]),e._v(" "),a("li",[e._v("源码转换：将React的JSX等转换为普通的JavaScript代码。")])]),e._v(" "),a("h2",{attrs:{id:"主要功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主要功能"}},[e._v("#")]),e._v(" 主要功能")]),e._v(" "),a("h2",{attrs:{id:"babel浏览器兼容方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel浏览器兼容方案"}},[e._v("#")]),e._v(" babel浏览器兼容方案")]),e._v(" "),a("h2",{attrs:{id:"babel插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel插件"}},[e._v("#")]),e._v(" babel插件")]),e._v(" "),a("h3",{attrs:{id:"babel-preset-env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-preset-env"}},[e._v("#")]),e._v(" @babel/preset-env")]),e._v(" "),a("p",[e._v("是一系列插件的集合，包含了我们在babel6中常用的es2015,es2016, es2017等最新的"),a("code",[e._v("语法转化插件")]),e._v("，允许我们使用最新的js语法，比如 let，const，箭头函数等等，"),a("strong",[e._v("但不包含低于 Stage 3 的 JavaScript 语法提案")]),e._v("。")]),e._v(" "),a("p",[a("strong",[e._v("'babel/preset-env'是babel的一个预设")]),e._v("，主要用来帮助我们对语法进行转换，会自动的根据当前环境对js语法做转换。我们只要安装这一个插件就能解决大部分的问题。")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[e._v('"presets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"@babel/preset-env"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 常用配置属性'targets' 'useBuiltIns' 'corejs'")]),e._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// targets: ['android >=7', 'iOS >=12'],")]),e._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 默认为auto，设置为false，对ES6的模块文件不做转化，否则 Babel 会在 Rollup 有机会做处理之前，将我们的模块转成 CommonJS ，导致 Rollup 的一些处理失败")]),e._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("modules")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// // 设置为usage时，babel会在目标环境的基础上，只加载项目里用的那些不支持的api的文件，做到按需加载")]),e._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// useBuiltIns: 'entry',")]),e._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// corejs: 3,")]),e._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("h3",{attrs:{id:"babel-helpers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-helpers"}},[e._v("#")]),e._v(" @babel/helpers")]),e._v(" "),a("p",[e._v("像Promise 这类api层面都是corejs，但是像class 这类他实际是语法糖并不是api层面corejs也没有对其支持，这类就需要'@babel/helpers'每一个语法都可以这样转换为低版本的语法，理论上所有的语法都可以用低版本的语法来实现。")]),e._v(" "),a("p",[e._v("但是只是转换并不能解决所有问题，涉及到某个对象的 api，比如 Array.prototype.find，这种 api 的兼容并不是需要转换语法，而是要在环境中注入我们实现的 api，也就是 polyfill （垫片）。")]),e._v(" "),a("h3",{attrs:{id:"babel-plugin-transform-runtime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-plugin-transform-runtime"}},[e._v("#")]),e._v(" @babel/plugin-transform-runtime")]),e._v(" "),a("p",[e._v("'@babel/plugin-transform-runtime'为了解决两个问题")]),e._v(" "),a("ul",[a("li",[e._v("babel/plugin-transform-runtime 解决全局污染问题")]),e._v(" "),a("li",[e._v("动态移除语法转换后内联的辅助函数（inline Babel helpers），使用@babel/runtime/helpers里的辅助函\n　数来替代")])]),e._v(" "),a("h2",{attrs:{id:"参考文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[e._v("#")]),e._v(" 参考文档")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.kancloud.cn/cyyspring/webpack/2673321",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端工程化学习笔记"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://kaiwu.lagou.com/course/courseInfo.htm?courseId=584&sid=20-h5Url-0&buyFrom=2&pageId=1pz4#/detail/pc?id=5911",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端基础建设与架构 30 讲"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://juejin.cn/book/6946117847848321055/section/6946578914764390434",target:"_blank",rel:"noopener noreferrer"}},[e._v("Babel 插件通关秘籍"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/375645455",target:"_blank",rel:"noopener noreferrer"}},[e._v("babel的配置使用详解"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://mp.weixin.qq.com/s/LlQRx5SPmFgnTDO8VunGnw",target:"_blank",rel:"noopener noreferrer"}},[e._v("babel-从入门到上手"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://blog.csdn.net/weixin_34163741/article/details/88015827",target:"_blank",rel:"noopener noreferrer"}},[e._v("babel polyfill runtime 浅析"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://segmentfault.com/a/1190000020237779",target:"_blank",rel:"noopener noreferrer"}},[e._v("Babel7 转码（二） - @babel/preset-env + @babel/polyfill"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://segmentfault.com/a/1190000020237790",target:"_blank",rel:"noopener noreferrer"}},[e._v("Babel7 转码（四）- polyfill 还是 transform-runtime"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);