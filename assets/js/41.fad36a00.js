(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{545:function(t,e,s){"use strict";s.r(e);var a=s(65),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"babel常用插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel常用插件"}},[t._v("#")]),t._v(" babel常用插件")]),t._v(" "),s("h2",{attrs:{id:"babel-preset-env"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-preset-env"}},[t._v("#")]),t._v(" @babel/preset-env")]),t._v(" "),s("p",[t._v("是一系列插件的集合，包含了我们在babel6中常用的es2015,es2016, es2017等最新的"),s("code",[t._v("语法转化插件")]),t._v("，允许我们使用最新的js语法，比如 let，const，箭头函数等等，"),s("strong",[t._v("但不包含低于 Stage 3 的 JavaScript 语法提案")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("'babel/preset-env'是babel的一个预设")]),t._v("，主要用来帮助我们对语法进行转换，会自动的根据当前环境对js语法做转换。我们只要安装这一个插件就能解决大部分的问题。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"presets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@babel/preset-env"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常用配置属性'targets' 'useBuiltIns' 'corejs'")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// targets: ['android >=7', 'iOS >=12'],")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认为auto，设置为false，对ES6的模块文件不做转化，否则 Babel 会在 Rollup 有机会做处理之前，将我们的模块转成 CommonJS ，导致 Rollup 的一些处理失败")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("modules")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// useBuiltIns: 'entry',")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// corejs: 3,")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"target-指定语法最低版本浏览器兼容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#target-指定语法最低版本浏览器兼容"}},[t._v("#")]),t._v(" target —— 指定语法最低版本浏览器兼容")]),t._v(" "),s("p",[t._v("随着低版本的浏览器逐步淘汰，一些新特性的语法在新浏览器已经支持，可能几年后大家已经不在使用IE，如果一股脑的全部兼容打包的体积也会变大，是否有必要全部转换成'es5'，我们更希望他可以根据你所配置的浏览器的列表，自动的去加载当前浏览器所需要的插件，然后对es语法做转换。")]),t._v(" "),s("h4",{attrs:{id:"解决方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),s("p",[t._v("可以通过配置文件指定语法最低版本浏览器兼容这里其实配合的是"),s("a",{attrs:{href:"https://browsersl.ist",target:"_blank",rel:"noopener noreferrer"}},[t._v("Browserslist"),s("OutboundLink")],1),t._v("，Browserslist 的数据都是来自\n'https://caniuse.com/'，现在我们知道各个版本浏览器支持的语法接下就是配置文件，配置文件是下面的优先级使用：")]),t._v(" "),s("ul",[s("li",[t._v("@babel/preset-env 里的 targets")]),t._v(" "),s("li",[t._v("package.json 里的 browserslist 字段")]),t._v(" "),s("li",[t._v("browserslistrc 配置文件")])]),t._v(" "),s("h4",{attrs:{id:"使用效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用效果"}},[t._v("#")]),t._v(" 使用效果")]),t._v(" "),s("p",[t._v("描述项目支持的环境/目标环境，支持browserslist查询写法")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全球使用人数大于0.25%且还没有废弃的版本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"targets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"> 0.25%, not dead"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("支持最小环境版本构成的对象")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"targets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"chrome"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"58"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ie"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果没配置targets，Babel会假设你的目标是最老的浏览器。@babel/preset-env会将转换所有的 ES2015-ES2023 代码转换为ES5代码。")]),t._v(" "),s("h3",{attrs:{id:"usebuiltins-api-导入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usebuiltins-api-导入"}},[t._v("#")]),t._v(" useBuiltIns —— api 导入")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/blog/engineer/bundle/corejs.html"}},[t._v("corejs")]),t._v(" 为"),s("code",[t._v("'@babel/preset-env'")]),t._v("提供了'useBuiltIns'参数。该参数可以设置三个值 'entry'、'usage'、'false'，默认使用false。")],1),t._v(" "),s("h4",{attrs:{id:"usebuiltins-false"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usebuiltins-false"}},[t._v("#")]),t._v(" useBuiltIns: false")]),t._v(" "),s("p",[t._v("在不主动import的情况下不使用 preset-env 来处理polyfills。比如，此时如果你想要添加'promise'垫片，则需要在文件中引入'import \"core-js/module/es.promise.js\"' 和 'import \"regenerator-runtime/runtime\"'。")]),t._v(" "),s("h4",{attrs:{id:"usebuiltins-entry"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usebuiltins-entry"}},[t._v("#")]),t._v(" useBuiltIns: entry")]),t._v(" "),s("p",[t._v("需要在入口文件手动引入'import \"core-js/stable\"' 和 'import \"regenerator-runtime/runtime\"'，会自动根据"),s("code",[t._v("targets")]),t._v("中配置的"),s("code",[t._v("browserslist")]),t._v("添加所有的polyfill。")]),t._v(" "),s("h4",{attrs:{id:"usebuiltins-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usebuiltins-usage"}},[t._v("#")]),t._v(" useBuiltIns: usage")]),t._v(" "),s("p",[t._v("会根据配置的浏览器兼容，以及你代码中用到的 API 按需添加 polyfill。")]),t._v(" "),s("h4",{attrs:{id:"corejs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#corejs"}},[t._v("#")]),t._v(" corejs")]),t._v(" "),s("p",[t._v("useBuiltIns 只会帮你导入corejs模块，但并不会帮你安装corejs包，因此记住手动安装corejs。")]),t._v(" "),s("p",[t._v("选项只有在和 "),s("code",[t._v('useBuiltIns: "usage"')]),t._v(" 或 "),s("code",[t._v('useBuiltIns: "entry"')]),t._v(' 一起使用时才有效果，该属性默认为 "2.0"。其作用是进一步约束引入的polyfill的数量。')]),t._v(" "),s("h3",{attrs:{id:"modules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modules"}},[t._v("#")]),t._v(" modules")]),t._v(" "),s("p",[t._v('参数值有 "amd" | "umd" | "systemjs" | "commonjs" | "cjs" | "auto" | false，默认为"auto"。')]),t._v(" "),s("p",[t._v("允许将 ES 模块语法转换为另一种模块类型。请注意，这cjs只是的别名commonjs。将其设置为false将保留"),s("code",[t._v("ES模块")]),t._v("，仅当您打算将本机"),s("code",[t._v("ES模块")]),t._v('发送到浏览器时才使用此选项。如果您打算使用Babel打包，则"auto"应始终是首选默认值。')]),t._v(" "),s("h2",{attrs:{id:"babel-helpers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-helpers"}},[t._v("#")]),t._v(" @babel/helpers")]),t._v(" "),s("p",[t._v("像Promise 这类api层面都是corejs，但是像class 这类他实际是语法糖并不是api层面corejs也没有对其支持，这类就需要'@babel/helpers'每一个语法都可以这样转换为低版本的语法，理论上所有的语法都可以用低版本的语法来实现。")]),t._v(" "),s("p",[t._v("但是只是转换并不能解决所有问题，涉及到某个对象的 api，比如 Array.prototype.find，这种 api 的兼容并不是需要转换语法，而是要在环境中注入我们实现的 api，也就是 polyfill （垫片）。")]),t._v(" "),s("h3",{attrs:{id:"babel-plugin-transform-runtime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-plugin-transform-runtime"}},[t._v("#")]),t._v(" @babel/plugin-transform-runtime")]),t._v(" "),s("p",[t._v("'@babel/plugin-transform-runtime'为了解决两个问题")]),t._v(" "),s("ul",[s("li",[t._v("babel/plugin-transform-runtime 解决全局污染问题")]),t._v(" "),s("li",[t._v("动态移除语法转换后内联的辅助函数（inline Babel helpers），使用@babel/runtime/helpers里的辅助函\n　数来替代")])]),t._v(" "),s("h2",{attrs:{id:"参考文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.kancloud.cn/cyyspring/webpack/2673321",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端工程化学习笔记"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://kaiwu.lagou.com/course/courseInfo.htm?courseId=584&sid=20-h5Url-0&buyFrom=2&pageId=1pz4#/detail/pc?id=5911",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端基础建设与架构 30 讲"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://juejin.cn/book/6946117847848321055/section/6946578914764390434",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel 插件通关秘籍"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/375645455",target:"_blank",rel:"noopener noreferrer"}},[t._v("babel的配置使用详解"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/LlQRx5SPmFgnTDO8VunGnw",target:"_blank",rel:"noopener noreferrer"}},[t._v("babel-从入门到上手"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://blog.csdn.net/weixin_34163741/article/details/88015827",target:"_blank",rel:"noopener noreferrer"}},[t._v("babel polyfill runtime 浅析"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://segmentfault.com/a/1190000020237779",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel7 转码（二） - @babel/preset-env + @babel/polyfill"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://segmentfault.com/a/1190000020237790",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel7 转码（四）- polyfill 还是 transform-runtime"),s("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);