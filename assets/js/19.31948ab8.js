(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{438:function(e,t,r){e.exports=r.p+"assets/img/kernel-structure.83318611.png"},439:function(e,t,r){e.exports=r.p+"assets/img/kernel.310d92a3.png"},533:function(e,t,r){"use strict";r.r(t);var v=r(65),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"一文看懂浏览器内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一文看懂浏览器内核"}},[e._v("#")]),e._v(" 一文看懂浏览器内核")]),e._v(" "),v("p",[e._v("所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。 浏览器内核不同，对于网页的语法解释必然会有所不同，所以最终导致不同浏览器的渲染的效果也不尽相同。")]),e._v(" "),v("p",[e._v("在浏览器中，有一个最重要的模块，它主要的作用是："),v("em",[v("strong",[e._v("将页面转变成可视化（准确讲还要加上可听化）的图像结果，这就是浏览器内核")])]),e._v("。")]),e._v(" "),v("p",[e._v("按"),v("a",{attrs:{href:"https://book.douban.com/subject/25910556/",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebKit技术内幕"),v("OutboundLink")],1),e._v('一书描述，浏览器内核，通常也被称作渲染引擎。其实，严格意义上来说，"渲染引擎" 和 "浏览器内核" 是两个相关但不完全相同的概念。浏览器内核包含了渲染引擎以及其他浏览器功能的一部分，例如网络请求、JavaScript 解释器、页面加载管理、用户界面等。换句话说，'),v("em",[v("strong",[e._v("浏览器内核是渲染引擎与其他组件（如网络请求、JavaScript 解释器、用户界面等）的集合")])]),e._v("。")]),e._v(" "),v("h2",{attrs:{id:"内核作用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内核作用"}},[e._v("#")]),e._v(" 内核作用")]),e._v(" "),v("p",[e._v("浏览器内核负责管理和协调浏览器的各个模块，将用户的输入（如点击链接或输入网址）转化为具体的操作，以便与其他模块协同工作以加载和显示网页。它功能远不止渲染网页，它还负责处理用户输入、管理书签和历史记录、执行插件等任务。")]),e._v(" "),v("p",[e._v("它主要的作用是将页面转变成可视化（准确讲还要加上可听化）的图像结果。详细点说就是："),v("red",[e._v("将从网络下载的HTML、XML、JS、CSS、图片、字体等资源，并将解析后的内容显示在屏幕上（通过插件/浏览器扩展程序，还可以显示其他类型的内容；例如，使用 PDF 查看器插件就能显示 PDF 文档）")]),e._v("。")],1),e._v(" "),v("p",[e._v("想了解浏览器渲染具体流程，请查看"),v("RouterLink",{attrs:{to:"/blog/broswer/render-mechanism.html"}},[e._v("浏览器渲染原理")]),e._v("。")],1),e._v(" "),v("h2",{attrs:{id:"内核构成"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内核构成"}},[e._v("#")]),e._v(" 内核构成")]),e._v(" "),v("p",[v("img",{attrs:{src:r(438),alt:"内核组成"}}),e._v(" "),e._v("\n从图中大致可以看出，在现代浏览器中，内核主要包括"),v("code",[e._v("渲染引擎")]),e._v("、"),v("code",[e._v("JavaScript引擎")]),e._v("、"),v("code",[e._v("网络")]),e._v("、"),v("code",[e._v("存储")]),e._v("、"),v("code",[e._v("2D/3D绘图")]),e._v("、"),v("code",[e._v("音频/视频解码器")]),e._v("、"),v("code",[e._v("图片解码器")]),e._v("等模块。")]),e._v(" "),v("p",[e._v("下面依次介绍下内核的各个组成部分。")]),e._v(" "),v("h3",{attrs:{id:"渲染引擎"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#渲染引擎"}},[e._v("#")]),e._v(" 渲染引擎")]),e._v(" "),v("blockquote",[v("p",[e._v("有的书/文章将JavaScript引擎包含在内，早先的渲染引擎确实包含了JavaScript解析器，但后来随着JS的能力越来越强大以及浏览器各个模块划分越来越严谨，JavaScript解析引擎早已从渲染引擎中解耦出去。")])]),e._v(" "),v("p",[e._v("也有的书称之为”网页排版引擎“，通常渲染引擎包括HTML解释器、CSS解释器、布局（Layout）等子模块。实际上，渲染引擎中还包括和依赖模块的连接，以及如何使用这些依赖模块的部分（例如，利用2D/3D图形库来实现高性能的网页回执和网页的3D渲染）。")]),e._v(" "),v("h4",{attrs:{id:"html解析器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#html解析器"}},[e._v("#")]),e._v(" HTML解析器")]),e._v(" "),v("p",[e._v("解释HTML/XML文本的解析器，主要作用是将HTML文本或MIME类型为"),v("code",[e._v("text/html")]),e._v("的二进制字节流解释成"),v("code",[e._v("DOM（Document Object Model文档对象模型）")]),e._v("树，DOM是一种文档的表示方法。")]),e._v(" "),v("p",[e._v("HTML解析器是浏览器架构中复用最多的子系统之一，几乎所有的浏览器实现都利用现有的HTML解析器，而不是从头开始创建自己的HTML解析器。")]),e._v(" "),v("h4",{attrs:{id:"css解析器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css解析器"}},[e._v("#")]),e._v(" CSS解析器")]),e._v(" "),v("p",[e._v("级联样式表(CSS)的解释器，作用是将MIME类型为"),v("code",[e._v("text/css")]),e._v("的字节流解码成css文本，css文本解析成"),v("code",[e._v("样式表-Style Sheets")]),e._v("，为DOM中各个元素对象计算出样式信息，从而为计算最后网页的 布局 提供基础设施。")]),e._v(" "),v("h4",{attrs:{id:"布局-layout"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#布局-layout"}},[e._v("#")]),e._v(" 布局（Layout）")]),e._v(" "),v("p",[e._v("DOM创建之后，内核需要将其中的元素对象所有样式信息结合起来，计算他们的大小位置等布局信息，形成一个能够标识这所有信息的内部呈现模型。调整布局的情况下，会使用“回流”算法逐步调整页面元素的位置。")]),e._v(" "),v("h3",{attrs:{id:"javascript解析引擎"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript解析引擎"}},[e._v("#")]),e._v(" JavaScript解析引擎")]),e._v(" "),v("p",[e._v("简单地说，JavaScript解析引擎就是能够“读懂”JavaScript代码（解析和执行JavaScript代码，执行高效的 "),v("code",[e._v("JIT编译（Just-In-Time）")]),e._v("），并准确地给出代码运行结果的一段程序。现在为大家所熟悉的浏览器跑分，实际上测试的就是javascript的执行速度。具体介绍和原理请查看"),v("RouterLink",{attrs:{to:"/blog/js/js-execute.html"}},[e._v("V8执行JavaScript原理")]),e._v("。")],1),e._v(" "),v("p",[e._v("使用JavaScript代码可以修改网页的内容，也能修改CSS的信息。JavaScript引擎能够解析并执行JavaScript代码，处理 DOM 操作、事件处理和数据计算等任务，然后通过"),v("code",[e._v("DOM接口")]),e._v("和"),v("code",[e._v("CSSOM接口")]),e._v("来修改网页内容和样式信息，从而改变渲染结果，实现网页的动态效果。")]),e._v(" "),v("p",[e._v("常见的JS引擎有：")]),e._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://en.wikipedia.org/wiki/WebKit#JavaScriptCore",target:"_blank",rel:"noopener noreferrer"}},[e._v("JavaScriptCore"),v("OutboundLink")],1),e._v("，"),v("code",[e._v("webkit")]),e._v("渲染引擎配套的js引擎，基于抽象语法树的解释器，性能较差。2008年苹果重写了编译器和字节码解释器，叫"),v("code",[e._v("SquirrelFish")]),e._v("。用于ios平台所有第三方浏览器")]),e._v(" "),v("li",[v("a",{attrs:{href:"https://en.wikipedia.org/wiki/SpiderMonkey",target:"_blank",rel:"noopener noreferrer"}},[e._v("SpiderMonkey"),v("OutboundLink")],1),e._v("，第一个 JavaScript 引擎，用于 Firefox 浏览器")]),e._v(" "),v("li",[v("a",{attrs:{href:"https://en.wikipedia.org/wiki/V8_(JavaScript_engine)",target:"_blank",rel:"noopener noreferrer"}},[e._v("V8 JavaScript引擎"),v("OutboundLink")],1),e._v("，由 Google 开发，使用 C++ 编写，"),v("code",[e._v("blink")]),e._v("渲染引擎配套的js引擎")])]),e._v(" "),v("h3",{attrs:{id:"网络-networking"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络-networking"}},[e._v("#")]),e._v(" 网络（Networking）")]),e._v(" "),v("p",[e._v("网络模块负责处理网络请求和响应，从服务器获取网页内容和资源，为文件解析MIME媒体类型。它实现了网络协议（如HTTP、HTTPS、FTP等）和各种网络安全功能，如安全套接字层（SSL）等。")]),e._v(" "),v("h3",{attrs:{id:"数据存储-data-storage"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据存储-data-storage"}},[e._v("#")]),e._v(" 数据存储（Data Storage）")]),e._v(" "),v("p",[e._v("数据存储模块负责管理用户的个人设置、浏览历史、Cookie、本地存储等数据。它提供了一种持久化存储数据的机制，使用户在不同的会话之间能够访问和管理他们的数据。")]),e._v(" "),v("h2",{attrs:{id:"内核种类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内核种类"}},[e._v("#")]),e._v(" 内核种类")]),e._v(" "),v("p",[e._v("在某些情况下，浏览器内核和渲染引擎这两个术语可能会被用来表示同一概念（因为内核的其他组成部分都大同小异，而渲染引擎决定了网页的结构、布局和外观，使用不同的渲染引擎页面表现存在很大差异）。"),v("em",[v("strong",[e._v("为了防止概念混淆，下面所说的 “xx内核” 都指使用了 “xx渲染引擎” 的内核浏览器")])]),e._v("。")]),e._v(" "),v("details",{staticClass:"custom-block details"},[v("summary",[e._v("点击一览所有内核")]),e._v(" "),v("p",[v("img",{attrs:{src:r(439),alt:"内核种类"}}),e._v("\n上图"),v("a",{attrs:{href:"https://en.wikipedia.org/wiki/Comparison_of_browser_engines",target:"_blank",rel:"noopener noreferrer"}},[e._v("数据"),v("OutboundLink")],1),e._v("展示了常见的浏览器内核，其中"),v("code",[e._v("Trident")]),e._v("、"),v("code",[e._v("KHTML")]),e._v("、"),v("code",[e._v("MSHTML")]),e._v("、"),v("code",[e._v("Presto")]),e._v("几乎已经不再维护。")])]),e._v(" "),v("h3",{attrs:{id:"移动端主流内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#移动端主流内核"}},[e._v("#")]),e._v(" 移动端主流内核")]),e._v(" "),v("p",[e._v("根据百度研究院统计，截止到2022/06，国内移动端各浏览器的市场占比为：\nChrome（27.52%）、UC（11.22%）、手百（10.22%）、微信浏览器（6.69%）、华为（6.57%）、Safari（6.3%）、QQ浏览器（6.05%）、其他（25.43%）。")]),e._v(" "),v("p",[e._v("虽然国内浏览器占据了大部分的市场份额，但是都属于套壳浏览器，没有自己的浏览器内核。目前、移动端ios和andriod平台主流内核种类有2种：")]),e._v(" "),v("ul",[v("li",[e._v("Webkit内核")]),e._v(" "),v("li",[e._v("Blink内核")])]),e._v(" "),v("h4",{attrs:{id:"webkit内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#webkit内核"}},[e._v("#")]),e._v(" Webkit内核")]),e._v(" "),v("p",[v("code",[e._v("WebKit")]),e._v(" 是一个开源的浏览器内核，本身主要是由两个引擎构成，一个是"),v("code",[e._v("网页排版引擎“WebCore”")]),e._v("，另一个则是"),v("code",[e._v("js解释引擎“JavaScriptCore”")]),e._v("，它们均是从KDE（Linux的桌面系统）的"),v("code",[e._v("网页排版引擎KHTML")]),e._v("及"),v("code",[e._v("js解释引擎KJS")]),e._v("衍生而来。")]),e._v(" "),v("p",[e._v("后来苹果公司基于"),v("code",[e._v("KHTML")]),e._v("和"),v("code",[e._v("KJS")]),e._v("开发出了搭载"),v("code",[e._v("WebKit")]),e._v("内核的"),v("code",[e._v("Safari浏览器")]),e._v("，现在 "),v("code",[e._v("Safari")]),e._v(" 里面使用了自己的 "),v("code",[e._v("Nitro JavaScript")]),e._v(" 引擎（支持"),v("code",[e._v("实时编译JITCompilation")]),e._v("，速度快），只用 "),v("code",[e._v("WebKit")]),e._v(" 来渲染 "),v("code",[e._v("HTML")]),e._v("。")]),e._v(" "),v("p",[v("code",[e._v("webkit")]),e._v("内核应用在浏览器，邮箱，阅读器，"),v("code",[e._v("App Store")]),e._v("上的各种软件上（由于苹果公司的政策，"),v("code",[e._v("iOS")]),e._v("上所有浏览器和应用用的都是 "),v("code",[e._v("WebKit")]),e._v(" 内核）。")]),e._v(" "),v("p",[e._v("现在已经有了基于webkit开发的"),v("code",[e._v("web平台")]),e._v("，包括"),v("code",[e._v("chromeOS")]),e._v("和"),v("code",[e._v("WebOS")]),e._v("。他们利用HTML5强大的能力，具有前瞻性的尝试开发了支持HTML5的Web操作系统。")]),e._v(" "),v("ul",[v("li",[e._v("优点：Webkit拥有清晰的源码结构、极快的渲染速度；跨平台性做的最好，支持除windows外的所有平台。")]),e._v(" "),v("li",[e._v("缺点：对网页代码的兼容性没那么高，会使一些编写不标准的网页无法正确显示。")])]),e._v(" "),v("h4",{attrs:{id:"blink内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#blink内核"}},[e._v("#")]),e._v(" Blink内核")]),e._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("Chromium")]),e._v(" "),v("p",[v("code",[e._v("Chromium")]),e._v("是一个开源浏览器项目，设计思想基于简单、高速、稳定、安全等理念，设计了“沙盒”、“黑名单”、“无痕浏览”等功能来实现稳定与安全的网页浏览环境。是Google为发展自家的浏览器"),v("code",[e._v("Google Chrome")]),e._v("（以下简称Chrome）而开启的计划，所以相当于Chrome浏览器的工程版或称实验版（尽管Chrome自身也有β版阶段）。")]),e._v(" "),v("p",[v("code",[e._v("Chromium")]),e._v("是开源试验场，会尝试时很多创新并且大胆的技术，待验证和稳定后才会应用在Chrome上，故Chrome的功能会相对落后、稳定（chrome不仅加入了私有的编码解码器以便支持音视频，加入了自动更新，还整合了Google众多的网络服务）。")]),e._v(" "),v("p",[v("code",[e._v("Chromium")]),e._v("利用"),v("a",{attrs:{href:"https://en.wikipedia.org/wiki/Chromium_Embedded_Framework",target:"_blank",rel:"noopener noreferrer"}},[e._v("CEF（Chromium Embeded Framework）"),v("OutboundLink")],1),e._v("技术（一个可以将浏览器功能如页面渲染、js执行等嵌入到其他应用程序的框架，具体技术实现是"),v("a",{attrs:{href:"https://www.electronjs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("electronjs"),v("OutboundLink")],1),e._v("），可以做跨平台的桌面端APP，支持Windows, Linux, Mac平台。")])]),e._v(" "),v("p",[v("code",[e._v("Blink")]),e._v("内核是Chromium项目中在"),v("code",[e._v("Webkit")]),e._v("内核基础上研发的渲染引擎。")]),e._v(" "),v("ul",[v("li",[e._v("布局和渲染部分：集成了"),v("code",[e._v("Webkit")]),e._v("网页排版引擎（webCore部分），在此基础上使用了多进程架构")]),e._v(" "),v("li",[e._v("JavaScript引擎： 使用大名鼎鼎的V8引擎")])]),e._v(" "),v("p",[e._v("国内的UC浏览器，手百浏览器，华为浏览器，QQ浏览器等手机浏览器最开始都是根据"),v("code",[e._v("Webkit")]),e._v("内核进行二次开发，但是在Blink内核出现后，基于blink内核在渲染和布局方面的优秀表现，国内厂商在非ios平台的浏览器上纷纷转而使用"),v("code",[e._v("Blink")]),e._v("内核。")]),e._v(" "),v("h3",{attrs:{id:"pc端主流内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#pc端主流内核"}},[e._v("#")]),e._v(" PC端主流内核")]),e._v(" "),v("p",[e._v("根据"),v("a",{attrs:{href:"https://gs.statcounter.com/browser-market-share/desktop/china",target:"_blank",rel:"noopener noreferrer"}},[e._v("statcounter"),v("OutboundLink")],1),e._v("数据统计，截止到目前，国内PC端各浏览器市场占比：Chrome（35.47%）、360安全浏览器（18.76%）、Edge（12.94%）、Firefox（11.12%）、QQ浏览器（9.95%）、Safari（3.92%）、搜狗浏览器（3.46%）、其他（4.38%）。")]),e._v(" "),v("p",[v("em",[v("strong",[e._v("chrome浏览器在PC端使用的是Blink内核，QQ浏览器PC版只有Windows版本，使用的是Trident内核")])]),e._v("。")]),e._v(" "),v("h4",{attrs:{id:"trident-edgehtml内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#trident-edgehtml内核"}},[e._v("#")]),e._v(" Trident/EdgeHTML内核")]),e._v(" "),v("p",[e._v("Trident内核在 1997 年的 IE4 中首次被采用，是微软在 Mosaic 代码的基础之上修改而来的。")]),e._v(" "),v("p",[e._v("Trident实际上是一款开放的内核，其接口内核设计的相当成熟，因此才有许多采用Trident内核的壳浏览器涌现。由于IE本身借助 windows系统的捆绑销售，长期处于垄断地位，而使得Trident内核长期一家独大，微软很长时间都并没有更新Trident内核，这导致了两个后果——一是 Trident 内核曾经几乎与 W3C 标准脱节（2005年），二是 Trident 内核的大量 Bug 等安全性问题没有得到及时解决，然后加上一些致力于开源的开发者和一些学者们公开自己认为 IE 浏览器不安全的观点，也有很多用户转向了其他浏览器，Firefox 和 Opera 就是这个时候兴起的。非 Trident 内核浏览器的市场占有率大幅提高也致使许多网页开发人员开始注意网页标准和非 IE浏览器的浏览效果问题。")]),e._v(" "),v("p",[v("em",[v("strong",[e._v("Window10 发布后，IE 将其内置浏览器命名为 Edge，Edge 最显著的特点就是新内核 EdgeHTML")])]),e._v("。")]),e._v(" "),v("h4",{attrs:{id:"gecko内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#gecko内核"}},[e._v("#")]),e._v(" Gecko内核")]),e._v(" "),v("p",[e._v("Gecko是Netscape网景公司在输掉第一次浏览器大战后，成立的Mozilla基金会开发的内核，Netscape6及后来的FireFox(火狐浏览器)也采用了该内核。")]),e._v(" "),v("ul",[v("li",[e._v("开源，代码完全公开，")]),e._v(" "),v("li",[e._v("跨平台，可以在Windows、 BSD、Linux和Mac OS X中使用")])]),e._v(" "),v("h4",{attrs:{id:"pc双核浏览器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#pc双核浏览器"}},[e._v("#")]),e._v(" PC双核浏览器")]),e._v(" "),v("p",[e._v("国内并没有开发出新的内核，使用的都是伪装模式。使用双核模式的浏览器中：其中一个内核是Trident（称为“兼容浏览模式”），然后再增加一个其他内核（之前是webkit内核，现在是Blink内核），一般称之为“高速浏览模式”，用户可以来回切换。")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("360安全浏览器")]),e._v("（1.0-5.0为Trident，6.0为Trident+Webkit，7.0为Trident+Blink）")]),e._v(" "),v("li",[v("strong",[e._v("360极速浏览器")]),e._v("（7.5之前为Trident+Webkit，7.5为Trident+Blink）")]),e._v(" "),v("li",[v("strong",[e._v("猎豹安全浏览器")]),e._v("（1.0-4.2版本为Trident+Webkit，4.3及以后版本为Trident+Blink）")]),e._v(" "),v("li",[v("strong",[e._v("搜狗高速浏览器")]),e._v("（1.x为Trident，2.0及以后版本为Trident+Webkit）")]),e._v(" "),v("li",[v("strong",[e._v("UC浏览器电脑版")]),e._v("（Trident内核+Blink内核）")])]),e._v(" "),v("h2",{attrs:{id:"参考文献"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[e._v("#")]),e._v(" 参考文献")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://en.wikipedia.org/wiki/Comparison_of_browser_engines",target:"_blank",rel:"noopener noreferrer"}},[e._v("维基百科"),v("OutboundLink")],1)]),e._v(" "),v("p",[v("a",{attrs:{href:"https://www.w3counter.com/globalstats.php",target:"_blank",rel:"noopener noreferrer"}},[e._v("w3counter"),v("OutboundLink")],1)]),e._v(" "),v("p",[v("a",{attrs:{href:"https://book.douban.com/subject/25910556/",target:"_blank",rel:"noopener noreferrer"}},[e._v("WebKit技术内幕"),v("OutboundLink")],1)]),e._v(" "),v("p",[v("a",{attrs:{href:"https://blog.csdn.net/u013510838/article/details/55211033",target:"_blank",rel:"noopener noreferrer"}},[e._v("浏览器内核分析2 -- Webkit和Chromium源码结构"),v("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=_.exports}}]);